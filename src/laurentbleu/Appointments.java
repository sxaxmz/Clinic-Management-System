/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package laurentbleu;

import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author user_PC
 */
public class Appointments extends javax.swing.JFrame {

    PreparedStatement pst= null;
    PreparedStatement pst2= null;
    ResultSet rs = null;
    ResultSet rs2 = null;
    Connection conn = null;
    Connection conn2 = null;
    
    /**
     * Creates new form Appointments
     */
    public Appointments() {
        initComponents();
        conn =JavaConnect.ConnectDb();
        conn2 =JavaConnect.ConnectDb();
        Update_Table();
        Combo();
    }
    
    public void Close1(){
        WindowEvent windowClose = new WindowEvent(this,WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(windowClose);
    }

    public void Combo (){
        String sql1 = "select doctor_id from doctors_availability";
        try {
        pst = conn.prepareStatement(sql1);
        rs=pst.executeQuery();
        while (rs.next()){
            String names = rs.getString("doctor_id"); 
            comboDrID.addItem(names);
        }
        
        
        } catch(Exception ex){
            ex.printStackTrace();
        }
    }
    
    public void Update_Table(){
        try {
           
            String sql = "select ap_id as 'Appointment ID', ap_date as 'Date', ap_slot as 'Time slot', dr_id as 'Doctor ID', dr_name as 'Doctor name', p_id as 'Patient ID', p_name as 'Patient name', ap_description as 'Description', ap_service as 'Service type' from appointments";
            
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            appointments.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception ex){
            JOptionPane.showMessageDialog(null, ex);
            System.out.println(ex);
        }finally {
            try {
                
                rs.close();
                pst.close();
                //conn.close();
            } catch (Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }
        }
    }
    
    public void Combo2(){
         try {
        String sql = "select doctor_name from doctors_availability where doctor_id=?";      
        pst2 = conn2.prepareStatement(sql);
        pst2.setString(1, comboDrID.getSelectedItem().toString().trim());
        rs2=pst2.executeQuery();
        while (rs2.next()){
            String names = rs2.getString("doctor_name");
                 txtDrName.setText(names);
        }                               
        }catch (Exception ex){
            ex.printStackTrace();
        } 
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        appointments = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtPID = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtPName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        comboService = new javax.swing.JComboBox<>();
        comboSlot = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        comboDrID = new javax.swing.JComboBox<>();
        txtDrName = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        txtDate = new com.toedter.calendar.JDateChooser();
        jPanel3 = new javax.swing.JPanel();
        btnClear = new javax.swing.JButton();
        btnInsert = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnMenu = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        appointments.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        appointments.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                appointmentsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(appointments);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Appointment information:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel5.setText("Patient:");

        txtPID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPIDActionPerformed(evt);
            }
        });
        txtPID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPIDKeyTyped(evt);
            }
        });

        jLabel1.setText("Appointment ID:");

        txtID.setEditable(false);
        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        txtPName.setEditable(false);
        txtPName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPNameActionPerformed(evt);
            }
        });

        jLabel2.setText("Time slot:");

        jLabel7.setText("Service:");

        comboService.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Select service>", "Consulting", "Skin and cosmetic", "Prescription products", "Botulinum Toxin A", "Dermal Fillers", "Chemical Peels", "Medical Grade Mircodermabrasion", "Alma Laser -AFT", "Fractional CO2 Laser", "Fotona Q Switched Nd-YAG Laser", "Hair Loss programme", "Lavatron Radiofrequency Machine" }));
        comboService.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboServiceActionPerformed(evt);
            }
        });

        comboSlot.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Time slot>", "1", "2", "3" }));
        comboSlot.setToolTipText("");
        comboSlot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSlotActionPerformed(evt);
            }
        });

        jLabel8.setText("Description:");

        jLabel3.setText("Doctor:");

        comboDrID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboDrIDActionPerformed(evt);
            }
        });

        txtDrName.setEditable(false);
        txtDrName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDrNameActionPerformed(evt);
            }
        });

        jButton2.setText("Consultation hours");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel6.setText("Date:");

        txtDescription.setColumns(20);
        txtDescription.setRows(5);
        jScrollPane2.setViewportView(txtDescription);

        txtDate.setDateFormatString("yyyy-MM-dd");
        txtDate.setMaxSelectableDate(new java.util.Date(253370739681000L));
        txtDate.setMinSelectableDate(new java.util.Date(-62135794719000L));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(40, 40, 40)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel6)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(18, 18, 18)
                            .addComponent(txtID))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboSlot, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addGap(61, 61, 61)
                            .addComponent(comboService, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(107, 107, 107)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtPID, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                                    .addComponent(comboDrID, 0, 136, Short.MAX_VALUE)
                                    .addComponent(txtDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPName, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDrName, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comboSlot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(comboDrID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDrName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtPName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboService, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tool panel:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnInsert.setText("Insert");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnView.setText("View appointments");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        jButton1.setText("Attach");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnMenu.setText("Main Menu");
        btnMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                                .addComponent(btnInsert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnView, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(btnMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnInsert))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnClear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(btnView))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/laurentbleu/logo-bleu.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 828, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(159, 159, 159))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(859, 630));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new Consulting().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        int index = comboService.getSelectedIndex();
        int index2 = comboSlot.getSelectedIndex();
        if (index == 0){
            JOptionPane.showMessageDialog(null,"Please select a service");
        } else if (index2 == 0){
        JOptionPane.showMessageDialog(null,"Please specify a time slot");
        }else{
        
        try {
            String query = "select * from appointments where ap_date=? and ap_slot=? and dr_id=?";
            pst= conn.prepareStatement(query);
            
            pst.setString(1, ((JTextField)txtDate.getDateEditor().getUiComponent()).getText());
            pst.setString(2, comboSlot.getSelectedItem().toString());
            pst.setString(3, comboDrID.getSelectedItem().toString());
            rs=pst.executeQuery();
            
            if (rs.next()){
                JOptionPane.showMessageDialog(null, "Already  booked, choose another slot/date please!");
            } else{
            
            String sql = "insert into appointments(ap_date, ap_slot, dr_id, dr_name, p_id, p_name, ap_description, ap_service) values(?,?,?,?,?,?,?,?)";
            pst=conn.prepareStatement(sql);
            pst.setString(1, ((JTextField)txtDate.getDateEditor().getUiComponent()).getText());
            pst.setString(2, comboSlot.getSelectedItem().toString());
            pst.setString(3, comboDrID.getSelectedItem().toString());
            pst.setString(4, txtDrName.getText());
            pst.setString(5, txtPID.getText());
            pst.setString(6, txtPName.getText());
            pst.setString(7, txtDescription.getText());
            pst.setString(8, comboService.getSelectedItem().toString());
            pst.execute();
            
            JOptionPane.showMessageDialog(null, "Appointment booked successfully");
            }
        } catch (Exception ex){
            ex.printStackTrace();
        }
        Update_Table();
    }//GEN-LAST:event_btnInsertActionPerformed
    }
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int p = JOptionPane.showConfirmDialog(null, "Are you sure?", "Delete", JOptionPane.YES_NO_OPTION);
        if (p == 0){
            String sql= "delete from appointments where ap_id=?";
            
            try{
                pst= conn.prepareStatement(sql);
                pst.setString(1, txtID.getText());
                pst.execute();
                JOptionPane.showMessageDialog(null, "Deleted successfuly!");
                
            } catch (Exception ex){
                ex.printStackTrace();
            }
            Update_Table();
        }
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtID.setText("");
        txtDrName.setText("");
        txtPID.setText("");
        txtPName.setText("");
        txtDescription.setText("");
        txtDate.setDate(null);
        comboService.setSelectedIndex(0);
        comboDrID.setSelectedIndex(0);
        comboSlot.setSelectedIndex(0);
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
       
        try{
        String value1 = txtID.getText();
        String value2 = comboSlot.getSelectedItem().toString();
        String value3 = txtDrName.getText();
        String value4 = comboDrID.getSelectedItem().toString();
        String value5 = txtPID.getText();
        String value6 = txtPName.getText();
        String value7 = txtDescription.getText();
        String value8 = comboService.getSelectedItem().toString();
        String value9 = txtDate.getDateEditor().getUiComponent().toString();
        
        String sql = "update appointments set ap_date='"+value9+"' , ap_slot = '"+value2+"' , dr_id = '"+value4+"' , dr_name = '"+value3+"' , p_id = '"+value5+"' , p_name = '"+value6+"' , ap_description = '"+value7+"' , ap_service = '"+value8+"' where ap_id = '"+value1+"'";
        pst = conn.prepareStatement(sql);
        pst.execute();
        JOptionPane.showMessageDialog(null, "Updated Successfully!");
        
        } catch (Exception ex){
            ex.printStackTrace();
        }
        Update_Table();
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new Upload().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void appointmentsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_appointmentsMouseClicked
        /* to show the data in the testField when clicking on the row (inside the table) */
        try{
            int row = appointments.getSelectedRow(); // create object "row" to get the selected item from database
            String table_click = appointments.getModel().getValueAt(row, 0).toString(); // create object "table_click"  to get the module from table were mouse click
            
            String sql = "select * from appointments where ap_id= '"+ table_click +"' "; // sql query to get columns from table where the mouse click
            pst=conn.prepareStatement(sql); // command to do the statement
            rs=pst.executeQuery(); // execute the statement and get the result in "rs"
            
            /* add the data to textField */
            if (rs.next()){
                String add1 = rs.getString("ap_id"); // create object "add#" 
                txtID.setText(add1); // make textField "txtID" take values from "add#"
                LoginID.apID = add1;
                String add3 = rs.getString("dr_name");
                txtDrName.setText(add3);
                String add4 = rs.getString("p_id");
                txtPID.setText(add4);
                String add5 = rs.getString("p_name");
                txtPName.setText(add5);
                String add6 = rs.getString("ap_description");
                txtDescription.setText(add6);
                String add7 = rs.getString("ap_service");
                System.out.println(add7);
                comboService.setSelectedItem(add7);
                String add8 = rs.getString("ap_slot");
                comboSlot.setSelectedItem(add8);
                Date add9 = rs.getDate("ap_date");
                txtDate.setDate(add9);
                String add2 = rs.getString("dr_id");
                comboDrID.setSelectedItem(add2);
            }
        } catch(Exception e){
            JOptionPane.showMessageDialog(null, e); // error msg 
            e.printStackTrace();
        } finally {
            try {
                rs.close(); 
                pst.close();
               // conn.close();
            } catch (Exception e){
                JOptionPane.showMessageDialog(null, e);
                e.printStackTrace();
                 }
        }
    }//GEN-LAST:event_appointmentsMouseClicked

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        new AppointmentList().setVisible(true);
        dispose(); 
        //Close1();
    }//GEN-LAST:event_btnViewActionPerformed

    private void comboDrIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboDrIDActionPerformed
        Combo2();
    }//GEN-LAST:event_comboDrIDActionPerformed

    private void txtPIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPIDActionPerformed
        try {

        String sql = "select p_name from patients where p_id= ?";      
        pst = conn.prepareStatement(sql);
        pst.setString(1, txtPID.getText());
        rs=pst.executeQuery();
        while (rs.next()){
            String names = rs.getString("p_name");
                 txtPName.setText(names);
        }        
                                  
            
    } catch (Exception ex){
            ex.printStackTrace();
            }
    }//GEN-LAST:event_txtPIDActionPerformed

    private void txtDrNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDrNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDrNameActionPerformed

    private void txtPNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPNameActionPerformed

    private void txtPIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPIDKeyTyped

    }//GEN-LAST:event_txtPIDKeyTyped

    private void comboSlotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSlotActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboSlotActionPerformed

    private void btnMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuActionPerformed
        new StaffMenu().setVisible(true);
        dispose(); 
    }//GEN-LAST:event_btnMenuActionPerformed

    private void comboServiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboServiceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboServiceActionPerformed

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        try {

        String sql = "select * from appointments where ap_id= ?";      
        pst = conn.prepareStatement(sql);
        pst.setString(1, txtID.getText());
        rs=pst.executeQuery();
        while (rs.next()){
            String add1 = rs.getString("p_id");
                 txtPID.setText(add1);
                String add2 = rs.getString("ap_slot");
                comboSlot.setSelectedItem(add2); 
                String add3 = rs.getString("dr_id");
                comboDrID.setSelectedItem(add3);
                Date add4 = rs.getDate("ap_date");
                txtDate.setDate(add4);
                String add5 = rs.getString("ap_service");
                comboService.setSelectedItem(add5);
                String add6 = rs.getString("ap_description");
                txtDescription.setText(add6);
                String add7 = rs.getString("p_id");
                txtPName.setText(add7);
        }                                        
            
    } catch (Exception ex){
            ex.printStackTrace();
            }finally {
            try {
                rs.close(); 
                pst.close();
               // conn.close();
            } catch (Exception e){
                JOptionPane.showMessageDialog(null, e);
                 }
        }
    }//GEN-LAST:event_txtIDActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Appointments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Appointments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Appointments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Appointments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Appointments().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable appointments;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnMenu;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JComboBox<String> comboDrID;
    private javax.swing.JComboBox<String> comboService;
    private javax.swing.JComboBox<String> comboSlot;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.toedter.calendar.JDateChooser txtDate;
    private javax.swing.JTextArea txtDescription;
    private javax.swing.JTextField txtDrName;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtPID;
    private javax.swing.JTextField txtPName;
    // End of variables declaration//GEN-END:variables
}
